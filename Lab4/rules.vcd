$date
  Wed Mar 29 20:22:23 2017
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 6 ! top_card[5:0] $end
$var reg 6 " play_card[5:0] $end
$var reg 6 # top_card_suit[5:0] $end
$var reg 6 $ play_card_suit[5:0] $end
$var reg 6 % top_card_value[5:0] $end
$var reg 6 & play_card_value[5:0] $end
$var reg 1 ' legal $end
$scope module arbiter $end
$var reg 6 ( play_pile_top_card[5:0] $end
$var reg 6 ) card_to_play[5:0] $end
$var reg 1 * legal_play $end
$var reg 6 + pile_value[5:0] $end
$var reg 6 , pile_suit[5:0] $end
$var reg 6 - card_value[5:0] $end
$var reg 6 . card_suit[5:0] $end
$scope module m1 $end
$var reg 6 / x[5:0] $end
$var reg 6 0 modulo[5:0] $end
$var reg 6 1 floor[5:0] $end
$var reg 9 2 s52[8:0] $end
$var reg 9 3 s50[8:0] $end
$var reg 9 4 mul1[8:0] $end
$var reg 6 5 fl[5:0] $end
$var reg 10 6 s132[9:0] $end
$var reg 10 7 s133[9:0] $end
$var reg 10 8 t[9:0] $end
$var reg 10 9 t2[9:0] $end
$var reg 10 : s130[9:0] $end
$var reg 10 ; mul2[9:0] $end
$var reg 10 < sm[9:0] $end
$upscope $end
$scope module m2 $end
$var reg 6 = x[5:0] $end
$var reg 6 > modulo[5:0] $end
$var reg 6 ? floor[5:0] $end
$var reg 9 @ s52[8:0] $end
$var reg 9 A s50[8:0] $end
$var reg 9 B mul1[8:0] $end
$var reg 6 C fl[5:0] $end
$var reg 10 D s132[9:0] $end
$var reg 10 E s133[9:0] $end
$var reg 10 F t[9:0] $end
$var reg 10 G t2[9:0] $end
$var reg 10 H s130[9:0] $end
$var reg 10 I mul2[9:0] $end
$var reg 10 J sm[9:0] $end
$upscope $end
$upscope $end
$scope module m1 $end
$var reg 6 K x[5:0] $end
$var reg 6 L modulo[5:0] $end
$var reg 6 M floor[5:0] $end
$var reg 9 N s52[8:0] $end
$var reg 9 O s50[8:0] $end
$var reg 9 P mul1[8:0] $end
$var reg 6 Q fl[5:0] $end
$var reg 10 R s132[9:0] $end
$var reg 10 S s133[9:0] $end
$var reg 10 T t[9:0] $end
$var reg 10 U t2[9:0] $end
$var reg 10 V s130[9:0] $end
$var reg 10 W mul2[9:0] $end
$var reg 10 X sm[9:0] $end
$upscope $end
$scope module m2 $end
$var reg 6 Y x[5:0] $end
$var reg 6 Z modulo[5:0] $end
$var reg 6 [ floor[5:0] $end
$var reg 9 \ s52[8:0] $end
$var reg 9 ] s50[8:0] $end
$var reg 9 ^ mul1[8:0] $end
$var reg 6 _ fl[5:0] $end
$var reg 10 ` s132[9:0] $end
$var reg 10 a s133[9:0] $end
$var reg 10 b t[9:0] $end
$var reg 10 c t2[9:0] $end
$var reg 10 d s130[9:0] $end
$var reg 10 e mul2[9:0] $end
$var reg 10 f sm[9:0] $end
$upscope $end
$enddefinitions $end
#0
b000111 !
b011000 "
b000000 #
b000001 $
b000111 %
b001011 &
1'
b000111 (
b011000 )
1*
b000111 +
b000000 ,
b001011 -
b000001 .
b000111 /
b000111 0
b000000 1
b000011100 2
b000000111 3
b000100011 4
b000000 5
b0000000000 6
b0000000000 7
b0000000000 8
b0000000111 9
b0000000000 :
b0000000000 ;
b0000000111 <
b011000 =
b001011 >
b000001 ?
b001100000 @
b000011000 A
b001111000 B
b000001 C
b0000000100 D
b0000001000 E
b0000001100 F
b0000011000 G
b0000000001 H
b0000001101 I
b0000001011 J
b000111 K
b000111 L
b000000 M
b000011100 N
b000000111 O
b000100011 P
b000000 Q
b0000000000 R
b0000000000 S
b0000000000 T
b0000000111 U
b0000000000 V
b0000000000 W
b0000000111 X
b011000 Y
b001011 Z
b000001 [
b001100000 \
b000011000 ]
b001111000 ^
b000001 _
b0000000100 `
b0000001000 a
b0000001100 b
b0000011000 c
b0000000001 d
b0000001101 e
b0000001011 f
#10000000
b011000 !
b000111 "
b000001 #
b000000 $
b001011 %
b000111 &
1'
b011000 (
b000111 )
1*
b001011 +
b000001 ,
b000111 -
b000000 .
b011000 /
b001011 0
b000001 1
b001100000 2
b000011000 3
b001111000 4
b000001 5
b0000000100 6
b0000001000 7
b0000001100 8
b0000011000 9
b0000000001 :
b0000001101 ;
b0000001011 <
b000111 =
b000111 >
b000000 ?
b000011100 @
b000000111 A
b000100011 B
b000000 C
b0000000000 D
b0000000000 E
b0000000000 F
b0000000111 G
b0000000000 H
b0000000000 I
b0000000111 J
b011000 K
b001011 L
b000001 M
b001100000 N
b000011000 O
b001111000 P
b000001 Q
b0000000100 R
b0000001000 S
b0000001100 T
b0000011000 U
b0000000001 V
b0000001101 W
b0000001011 X
b000111 Y
b000111 Z
b000000 [
b000011100 \
b000000111 ]
b000100011 ^
b000000 _
b0000000000 `
b0000000000 a
b0000000000 b
b0000000111 c
b0000000000 d
b0000000000 e
b0000000111 f
#20000000
b000110 !
b000010 "
b000000 #
b000110 %
b000010 &
1'
b000110 (
b000010 )
1*
b000110 +
b000000 ,
b000010 -
b000110 /
b000110 0
b000000 1
b000011000 2
b000000110 3
b000011110 4
b000000 5
b0000000000 6
b0000000000 7
b0000000000 8
b0000000110 9
b0000000000 :
b0000000000 ;
b0000000110 <
b000010 =
b000010 >
b000001000 @
b000000010 A
b000001010 B
b0000000010 G
b0000000010 J
b000110 K
b000110 L
b000000 M
b000011000 N
b000000110 O
b000011110 P
b000000 Q
b0000000000 R
b0000000000 S
b0000000000 T
b0000000110 U
b0000000000 V
b0000000000 W
b0000000110 X
b000010 Y
b000010 Z
b000001000 \
b000000010 ]
b000001010 ^
b0000000010 c
b0000000010 f
#30000000
b001110 "
b000001 $
b000001 &
0'
b001110 )
0*
b000001 -
b000001 .
b001110 =
b000001 >
b000001 ?
b000111000 @
b000001110 A
b001000110 B
b000001 C
b0000000100 D
b0000001000 E
b0000001100 F
b0000001110 G
b0000000001 H
b0000001101 I
b0000000001 J
b001110 Y
b000001 Z
b000001 [
b000111000 \
b000001110 ]
b001000110 ^
b000001 _
b0000000100 `
b0000001000 a
b0000001100 b
b0000001110 c
b0000000001 d
b0000001101 e
b0000000001 f
#40000000
b000000 !
b001101 "
b000000 %
b000000 &
1'
b000000 (
b001101 )
1*
b000000 +
b000000 -
b000000 /
b000000 0
b000000000 2
b000000000 3
b000000000 4
b0000000000 9
b0000000000 <
b001101 =
b000000 >
b000110100 @
b000001101 A
b001000001 B
b0000001101 G
b0000000000 J
b000000 K
b000000 L
b000000000 N
b000000000 O
b000000000 P
b0000000000 U
b0000000000 X
b001101 Y
b000000 Z
b000110100 \
b000001101 ]
b001000001 ^
b0000001101 c
b0000000000 f
#50000000
b000111 !
b010100 "
b000111 %
b000111 &
b000111 (
b010100 )
b000111 +
b000111 -
b000111 /
b000111 0
b000011100 2
b000000111 3
b000100011 4
b0000000111 9
b0000000111 <
b010100 =
b000111 >
b001010000 @
b000010100 A
b001100100 B
b0000010100 G
b0000000111 J
b000111 K
b000111 L
b000011100 N
b000000111 O
b000100011 P
b0000000111 U
b0000000111 X
b010100 Y
b000111 Z
b001010000 \
b000010100 ]
b001100100 ^
b0000010100 c
b0000000111 f
